{"version":3,"sources":["serviceWorker.js","components/generalFunctions.js","components/navigationRenderer.jsx","components/errorLog.jsx","components/woxComponents/leafletHover.jsx","components/woxComponents/pictureFolder.jsx","components/woxComponents/carousel.jsx","components/woxComponents/textRenderer.jsx","components/woxComponents/containerRenderer.jsx","components/woxComponents/clickablePictureRenderer.jsx","components/woxComponents/reply.jsx","components/woxComponents/comments.jsx","components/woxComponents/commenting.jsx","components/componentRenderer.jsx","components/compColRenderer.jsx","components/columnsRenderer.jsx","components/footerRenderer.jsx","components/editIcon.js","components/pageRenderer.jsx","index.js"],"names":["Boolean","window","location","hostname","match","parseProps","obj","props","forEach","p","JSON","parse","locations","component","componentLocation","page","getPageLocation","layout","getLayoutLocation","image","imageLocation","comment","commentLocation","path","pathLocation","getURL","type","development","hostPrefix","port","apiLocation","URL","document","origin","console","warn","liveUpdate","defErrF","logConnectionErrors","log","n","getApiObject","id","a","errorf","slice","defaultUrl","axios","get","params","field","response","catch","data","object","post","__next_objid","objectId","__obj_id","components","requestUpdate","updateCallback","tools","prevDone","callback","interval","setInterval","updateInterval","stopRequestUpdate","clearInterval","NavigationRenderer","state","brand","pages","componentDidMount","navcontent","backgroundColor","map","invalidIdx","Promise","all","then","filter","res","idx","push","setState","invalidPages","home","this","Navbar","collapseOnSelect","expand","style","Brand","href","Toggle","aria-controls","Collapse","Nav","className","link","Link","key","title","url","Component","ErrorLog","severitieMsg","sevirityIdx","severity","color","infoLogPage","statement","details","defaultIcon","L","icon","iconUrl","iconSize","iconAnchor","popupAnchor","shadowSize","shadowAnchor","LeafletHover","mapOpen","toggleMap","newState","leafletMap","position","Map","center","zoom","TileLayer","attribution","Marker","Card","Body","openMapButton","Button","onClick","src","alt","caption","PictureFolder","currentImage","viewerIsOpen","images","invalidImages","updatePictures","ids","content","i","openLightbox","event","photo","index","closeLightbox","render","thumbnails","compressed_src","photos","onClose","currentIndex","views","Footer","innerProps","locationActive","lat","long","imgLocation","WoxCarousel","source","CurstomFooter","captionActive","customCaption","singleCaption","captionIdx","captions","Badge","variant","TextRenderer","markdownConverter","Converter","dangerouslySetInnerHTML","__html","makeHtml","text","ContainerRenderer","ReactComp","Row","Col","parent","CliclablePictureRenderer","small","width","height","updatePicture","ReplyButton","Reply","useState","validated","setValidated","Form","noValidate","onSubmit","preventDefault","form","target","checkValidity","stopPropagation","replyId","handleReply","handleVisible","values","Object","keys","value","o","firstName","lastName","reaction","postApiObject","author","stringify","setTimeout","Group","as","md","controlId","Label","Control","required","placeholder","Feedback","ProfilePicture","CommentsRenderer","reply","date","replies","updateComments","commentParseProps","componentWillUnmount","toggleReply","allowChildren","replyButton","Media","Alert","r","CommentingRenderer","comments","c","parrent","ComponentRenderer","updateComponent","ComponentParseProps","handlers","carousel","container","button","clickablePicture","pictureFolder","commentable","handler","CompColRenderer","ColumnsRenderer","leftSize","middleSize","rightSize","defaultSizes","validChoice","single","triple","columnType","l","m","compsL","compsM","compsR","comCollsStyle","leftCol","middleCol","rightCol","Container","fluid","Tabs","defaultActiveKey","Tab","eventKey","sm","FooterRenderer","footcontent","setLayoutIcon","iconId","docHead","head","getElementsByTagName","createElement","oldLink","getElementById","rel","removeChild","appendChild","changeFavicon","err","noHomePage","noFoundPage","noLayoutFound","PageRenderer","currentPage","parsePage","pageParseProps","fetchedLayout","layoutParseProps","customIcon","startMainApp","currPath","pathname","currPage","pageId","split","pop","navbar","footer","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gQAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,4ICIC,SAASC,EAAWC,EAAKC,GAC9BA,EAAMC,SAAQ,SAAAC,GACCH,EAAIG,KACPH,EAAIG,GAAKC,KAAKC,MAAML,EAAIG,QAOtC,IAAMG,EAAY,CAChBC,UAAWC,IACXC,KAAMC,IACNC,OAAQC,IACRC,MAAOC,IACPC,QAASC,IACTC,KAAMC,KAQR,SAASC,EAAOC,GAEd,OAAIC,IACKC,IAAazB,IAAW0B,IAAOC,IAAclB,EAAUc,GACzD,IAAIK,IAAIC,SAASD,KAAKE,OAASH,IAAclB,EAAUc,GAT5DC,KACFO,QAAQC,KACN,+BACCC,IAAkE,KAArD,oDASlB,IAAMC,EAAUC,IAAsBJ,QAAQK,IAAM,SAAAC,KAE7C,SAAeC,EAAtB,oC,4CAAO,WAA4Bf,EAAMgB,GAAlC,6BAAAC,EAAA,sDAAsCC,EAAtC,+BAA+CP,EAA/C,KAEGX,EAFH,OAGE,SAHF,8BAIDgB,EAAKA,EAAGG,MAAM,MACLH,EAAKI,KALb,SAMgBC,IAAMC,IAAIvB,EAAO,QAAUiB,EAAI,CAC9CO,OAAQ,CAAEC,MAAO,SAPlB,cAMDC,EANC,qDAYgBJ,IAAMC,IAAIvB,EAAOC,GAAQgB,GAAIU,MAAMR,GAZnD,eAYDO,EAZC,wCAeDA,IAAYA,EAASE,KAfpB,0CAeiCF,EAASE,MAf1C,iCAgBE,MAhBF,6C,kEAmBA,WAA6B3B,EAAMgB,EAAIY,GAAvC,6BAAAX,EAAA,6DAA+CC,EAA/C,+BAAwDP,EAAxD,SACkBU,IAAMQ,KAAK9B,EAAOC,GAAQgB,EAAIY,GAAQF,MAAMR,GAD9D,YACCO,EADD,UAEWA,EAASE,KAFpB,yCAEiCF,EAASE,MAF1C,gCAGE,MAHF,4C,sBAkBP,IAAIG,EAAe,EACnB,SAASC,EAASnD,GAChB,OAAW,MAAPA,EAAoB,MACJ,MAAhBA,EAAIoD,WAAkBpD,EAAIoD,SAAWF,KAClClD,EAAIoD,UAiBb,IAAMC,EAAa,GAEZ,SAASC,EAAc/C,EAAWgD,GAAgB,4CAIvD,4BAAAlB,EAAA,2DACQmB,EAAQH,EAAWF,EAAS5C,KACxBkD,SAFZ,uBAGID,EAAMC,UAAW,EAHrB,SAIUD,EAAME,WAJhB,OAKIF,EAAMC,UAAW,EALrB,4CAJuD,sBAElDpC,MAYLgC,EAAWF,EAAS5C,IAAc,CAChCmD,SAAUH,EACVE,UAAU,EACVE,SAAUC,aAjB2C,4CAiBvBC,OAI3B,SAASC,EAAkBvD,GAE3Bc,MAEL0C,cAAcV,EAAWF,EAAS5C,IAAYoD,iBACvCN,EAAWF,EAAS5C,K,IC1FdyD,E,2MA9CbC,MAAQ,CAAEC,MAAO,KAAMC,MAAO,I,EAE9BC,kB,sBAAoB,oCAAA/B,EAAA,wDAC6B,EAAKpC,MAA5CiE,EADU,EACVA,MAAOG,EADG,EACHA,WADG,EACSC,gBACrBH,EAAQE,EACVA,EAAWE,KAAI,SAAA9D,GAAI,OAAI0B,EAAa,OAAQ1B,MAC5C,GACE+D,EAAa,GACnBC,QAAQC,IAAIP,GAAOQ,MAAK,SAAAR,GACtBA,EAAQA,EAELS,QAAO,SAACC,EAAKC,GAEZ,OADKD,GAAKL,EAAWO,KAAKD,KACjBD,KAEb,EAAKG,SAAS,CACZd,MAAOA,EACPC,MAAOA,EACPc,aAAcT,EACdF,gBD4DC,6BC7Ea,2C,wEAuBlB,IAAMY,EAAO,IAAIzD,IAAIC,SAASD,KAAKE,OAD5B,EAEkBwD,KAAKlB,MAAtBC,EAFD,EAECA,MAAOC,EAFR,EAEQA,MACf,OACE,kBAACiB,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,MAAOJ,KAAKlB,OAC9CC,EAAQ,kBAACkB,EAAA,EAAOI,MAAR,CAAcC,KAAMP,GAAOhB,GAAwB,KAC5D,kBAACkB,EAAA,EAAOM,OAAR,CAAeC,gBAAc,qBAC7B,kBAACP,EAAA,EAAOQ,SAAR,CAAiBxD,GAAG,oBAClB,kBAACyD,EAAA,EAAD,CAAKC,UAAU,WACZ3B,EAAMI,KAAI,SAAAwB,GAAI,OAEb,kBAACF,EAAA,EAAIG,KAAL,CAAUC,IAAKF,EAAKG,MAAOT,KAAMP,EAAO,IAAMa,EAAKI,KAChDJ,EAAKG,iB,GArCWE,a,8DC0BlBC,EA3BE,SAAApG,GACf,IAAMqG,EAAe,CAAC,OAAQ,OAAQ,UAAW,SAE3CC,EAActG,EAAMuG,SAAWvG,EAAMuG,SAAW,EAEhDjB,EAAQ,CAAEkB,MAHG,CAAC,QAAS,OAAQ,SAAU,OAEnBF,IAE5B,OAAIG,IAEA,6BACE,wBAAInB,MAAOA,GACRe,EAAaC,GADhB,KACgCtG,EAAM0G,WAEtC,wBAAIpB,MAAOA,GAAX,YAA4BtF,EAAM2G,WAIpCvF,KACFO,QAAQK,IACNqE,EAAaC,GACX,IACAtG,EAAM0G,UACN,aACA1G,EAAM2G,SAEL,O,4DCpBHC,G,cAAcC,IAAEC,KAAK,CACzBC,QACE,yEACFC,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,IACjBC,YAAa,EAAE,GAAI,IACnBC,WAAY,CAAC,GAAI,IACjBC,aAAc,CAAC,GAAI,OA0DNC,E,2MAtDbrD,MAAQ,CAAEsD,SAAS,G,EAEnBC,UAAY,WACV,IAAMC,EAAW,EAAKxD,MACtBwD,EAASF,SAAWE,EAASF,QAC7B,EAAKvC,SAASyC,I,EAIhBC,WAAa,SAAAC,GAAQ,OACnB,kBAACC,EAAA,EAAD,CAAK9B,UAAU,MAAM+B,OAAQF,EAAUG,KAAM,IAC3C,kBAACC,EAAA,EAAD,CACE5B,IAAI,qDACJ6B,YAAY,2EAEd,kBAACC,EAAA,EAAD,CAAQN,SAAUA,EAAUZ,KAAMF,M,wEAKpC,IAAMtC,EAAMY,KAAKlB,MAAMsD,QACrB,kBAACW,EAAA,EAAD,CAAMpC,UAAU,aACd,kBAACoC,EAAA,EAAKC,KAAN,KAAYhD,KAAKuC,WAAWvC,KAAKlF,MAAML,YAEvC,KAEEwI,EACJ,kBAACC,EAAA,EAAD,CAAQvC,UAAU,UAAUwC,QAASnD,KAAKqC,WACvCrC,KAAKlB,MAAMsD,QACV,gCAEA,yBACEzB,UAAU,eACVyC,IAAI,yEACJC,IAAI,cAMZ,OACE,yBAAK1C,UAAU,iBACb,wBAAIA,UAAU,gBAAgBX,KAAKlF,MAAMwI,SACxCtD,KAAKlF,MAAML,SACV,6BACGwI,EACA7D,GAED,U,GAjDe6B,a,6kBCoFZsC,G,2MAzFbzE,MAAQ,CACN0E,aAAc,EACdC,cAAc,EACdC,OAAQ,GACRC,eAAe,G,EAGjBC,e,sBAAiB,gCAAA1G,EAAA,yDACP2G,EAAQ,EAAK/I,MAAMgJ,QAAnBD,IADO,yCAEE,MAFF,OAGTH,EAASG,EAAIzE,KAAI,SAAAnC,GAAE,OAAID,EAAa,QAASC,MAC7CoC,EAAa,GACnBC,QAAQC,IAAImE,GAAQlE,MAAK,SAAAkE,GACvBA,EAASA,EAENjE,QAAO,SAACC,EAAKC,GAEZ,OADKD,GAAKL,EAAWO,KAAKD,KACjBD,KAEVD,QAAO,SAAAC,GACN,OAAOA,EAAIzC,MAGZmC,KAAI,SAAA2E,GAAC,YAAUA,MAClB,EAAKlE,SAAS,CAAE6D,OAAQA,EAAQC,cAAetE,OAjBlC,2C,EAqBjBJ,kB,sBAAoB,sBAAA/B,EAAA,sEACZ,EAAK0G,iBADO,OAEdjH,KAAYwB,EAAc,eAAM,EAAKyF,gBAFvB,2C,EASpBI,aAAe,SAACC,EAAD,GAA6B,EAAnBC,MAAoB,IAAbC,EAAY,EAAZA,MAC9B,EAAKtE,SAAS,CAAE2D,aAAcW,EAAOV,cAAc,K,EAGrDW,cAAgB,WACd,EAAKvE,SAAS,CAAE2D,aAAc,EAAGC,cAAc,K,EAGjDY,OAAS,WAAO,IACRX,EAAW,EAAK5E,MAAhB4E,OACN,IAAKA,EAAQ,OAAO,KAEpB,IAAMY,EAAaZ,EAAOtE,KAAI,SAAA2E,GAAC,YAC1BA,EAD0B,CAE7BX,IAAKW,EAAEQ,eAAiBR,EAAEQ,eAAiBR,EAAEX,SAiB/C,OACE,6BACE,kBAAC,IAAD,CAASoB,OAAQF,EAAYnB,QAAS,EAAKa,eAC3C,kBAAC,IAAD,KACG,EAAKlF,MAAM2E,aACV,kBAAC,IAAD,CAAOgB,QAAS,EAAKL,eACnB,kBAAC,IAAD,CACEM,aAAc,EAAK5F,MAAM0E,aACzBmB,MAAOjB,EACPxF,WAAY,CACV0G,OAxBO,SAAC,GAAiC,EAA/BC,WAAgC,IAApBH,EAAmB,EAAnBA,aAClC,IAAK,EAAK5J,MAAMgJ,QAAQgB,eAAgB,OAAO,KAC/C,IAAMC,EAAMrB,EAAOgB,GAAcK,IAC3BC,EAAOtB,EAAOgB,GAAcM,KAE5BC,EAAcF,GAAOC,EAAO,CAACD,EAAKC,GAAQ,KAChD,OACE,kBAAC,EAAD,CACE1B,QAASI,EAAOgB,GAAc3D,MAC9BtG,SAAUwK,SAmBN,Q,sFAhDNtI,KAAYgC,EAAkBqB,U,GAnCViB,a,imBCuCbiE,G,2MA3CbpG,MAAQ,CAAE4E,OAAQ,GAAIC,cAAe,I,EAErC1E,kB,sBAAoB,gCAAA/B,EAAA,yDACV2G,EAAQ,EAAK/I,MAAMgJ,QAAnBD,IADU,iDAGZH,EAASG,EAAIzE,KAAI,SAAAnC,GAAE,OAAID,EAAa,QAASC,MAC7CoC,EAAa,GACnBC,QAAQC,IAAImE,GAAQlE,MAAK,SAAAkE,GACvBA,EAASA,EAENjE,QAAO,SAACC,EAAKC,GAEZ,OADKD,GAAKL,EAAWO,KAAKD,KACjBD,KAGVN,KAAI,SAAA2E,GAAC,aAAUA,EAAV,CAAaoB,OAAQpB,EAAEX,SAC/B,EAAKvD,SAAS,CAAE6D,OAAQA,EAAQC,cAAetE,OAd/B,2C,EAkBpB+F,cAAgB,YAAuB,IAApBV,EAAmB,EAAnBA,aAAmB,EACoB,EAAK5J,MAAMgJ,QAA3DuB,EAD4B,EAC5BA,cAAeC,EADa,EACbA,cAAeC,EADF,EACEA,cACtC,IAAKF,EAAe,OAAO,KAC3B,IAAMG,EAAaD,EAAgB,EAAIb,EACjCpB,EAAUgC,EACZ,EAAKxK,MAAMgJ,QAAQ2B,SAASD,GAC5B,EAAK1G,MAAM4E,OAAO8B,GAAYlC,QAClC,OACE,wBAAI3C,UAAU,mBACZ,kBAAC+E,GAAA,EAAD,CAAOC,QAAQ,QAAQrC,K,wEAKnB,IACAI,EAAW1D,KAAKlB,MAAhB4E,OACR,OAAKA,EAAO,IACLA,EACL,kBAAC,IAAD,CAAUiB,MAAOjB,EAAQxF,WAAY,CAAE0G,OAAQ5E,KAAKoF,iBAF/B,S,GArCDnE,a,UCSX2E,GAZM,SAAA9K,GACnB,IAAM+K,EAAoB,IAAIC,aAC9B,OAEE,yBACEC,wBAAyB,CACvBC,OAAQH,EAAkBI,SAASnL,EAAMgJ,QAAQoC,UCwB1CC,GA5BW,SAAArL,GAAU,IAAD,EACVA,EAAMgJ,QAArB1D,EADyB,EACzBA,MAAOyD,EADkB,EAClBA,IACXuC,EAAYC,IAGhB,MAFc,eAAVjG,IAAwBgG,EAAYE,KAC1B,aAAVlG,IAAsBgG,EAAYC,KACjCxC,EAEH,kBAACuC,EAAD,KACGvC,EAAIzE,KAAI,SAAAnC,GACP,OAAOA,IAAOnC,EAAMyL,OAClB,kBAACD,EAAA,EAAD,CAAKxF,IAAK7D,GACR,yBAAK6D,IAAK7D,GACR,kBAAC,GAAD,CAAmB6D,IAAK7D,EAAIA,GAAIA,MAIpC,kBAAC,EAAD,CACE6D,IAAK7D,EACLuE,UAAW,iCACXC,QAAS,iBAAmBxE,EAC5BoE,SAAU,QAfH,M,ilBCuBJmF,G,2MA7Bb1H,MAAQ,CACNwE,QAAS,KACTF,IAAK,KACLqD,MAAO,KACPC,MAAO,KACPC,OAAQ,KACRlM,SAAU,M,EAGZmM,c,sBAAgB,4BAAA1J,EAAA,sEACIF,EAAa,QAAS,EAAKlC,MAAMgJ,QAAQ7G,IAD7C,OACVvB,EADU,OAEd,EAAKmE,SAAL,MAAmBnE,IAFL,2C,EAKhBuD,kB,sBAAoB,sBAAA/B,EAAA,sEACZ,EAAK0J,gBADO,2C,wEAIV,IAAD,EACkB5G,KAAKlB,MAAtBwE,EADD,EACCA,QAASF,EADV,EACUA,IACjB,OAAKA,EAEH,uBAAG9C,KAAMN,KAAKlF,MAAMgJ,QAAQlD,MAC1B,yBAAKwC,IAAKA,EAAKC,IAAKC,KAHP,S,GArBkBrC,a,wCCyEhC,SAAS4F,GAAY/L,GAC1B,OACE,kBAACoI,EAAA,EAAD,CAAQyC,QAAQ,YAAYhF,UAAU,cAAcwC,QAASrI,EAAMqI,SACjE,yBACEuD,MAAM,QACNC,OAAO,QACPvD,IAAI,yEACJC,IAAI,gBAMGyD,OApFD,SAAAhM,GAAU,IAAD,EACaiM,oBAAS,GADtB,oBACdC,EADc,KACHC,EADG,KAoCrB,OACE,yBAAKtG,UAAU,aACb,kBAACuG,GAAA,EAAD,CAAMC,YAAU,EAACH,UAAWA,EAAWI,SAnCtB,SAAAnD,GACnBA,EAAMoD,iBACN,IAAMC,EAAOrD,EAAMsD,OACnB,IAA6B,IAAzBD,EAAKE,gBACPvD,EAAMoD,iBACNpD,EAAMwD,sBACD,CAAC,IACErM,EAAmDN,EAAnDM,UAAWsM,EAAwC5M,EAAxC4M,QAASC,EAA+B7M,EAA/B6M,YAAaC,EAAkB9M,EAAlB8M,cACnClK,EAAW,GACXmK,EAASC,OAAOC,KAAKT,GACxBlI,KAAI,SAAAnC,GAAE,MAAK,CAAEA,GAAIqK,EAAKrK,GAAIA,GAAI+K,MAAOV,EAAKrK,GAAI+K,UAC9CvI,QAAO,SAAAwI,GAAC,QAAMA,EAAED,SACnBH,EAAO9M,SAAQ,SAAAF,GACb6C,EAAS7C,EAAIoC,IAAMpC,EAAImN,SAPpB,IASGE,EAAkCxK,EAAlCwK,UAAWC,EAAuBzK,EAAvByK,SAAUC,EAAa1K,EAAb0K,UTmD5B,SAAP,+BS5CMC,CAAc,UADHX,GAAoB,GALd,CACfY,OAAQJ,EAAY,IAAMC,EAC1BrE,QAAS7I,KAAKsN,UAAU,CAAEH,SAAUA,IACpChN,UAAWA,IAIboN,WAAU,sBAAC,sBAAAtL,EAAA,yDACT2K,EAAO9M,SAAQ,SAAAF,GAAG,OAAKyM,EAAKzM,EAAIoC,IAAI+K,MAAQ,MACxCJ,GAAeA,KACfD,EAHK,gCAGcA,IAHd,2CAIR,KAELV,GAAa,KAOT,kBAACC,GAAA,EAAKb,IAAN,KACE,kBAACa,GAAA,EAAKuB,MAAN,CAAYC,GAAIpC,IAAKqC,GAAG,IAAIC,UAAU,aACpC,kBAAC1B,GAAA,EAAK2B,MAAN,mBACA,kBAAC3B,GAAA,EAAK4B,QAAN,CAAcC,UAAQ,EAAC9M,KAAK,OAAO+M,YAAY,eAC/C,kBAAC9B,GAAA,EAAK4B,QAAQG,SAAd,qBAEF,kBAAC/B,GAAA,EAAKuB,MAAN,CAAYC,GAAIpC,IAAKqC,GAAG,IAAIC,UAAU,YACpC,kBAAC1B,GAAA,EAAK2B,MAAN,kBACA,kBAAC3B,GAAA,EAAK4B,QAAN,CAAcC,UAAQ,EAAC9M,KAAK,OAAO+M,YAAY,cAC/C,kBAAC9B,GAAA,EAAK4B,QAAQG,SAAd,qBAEF,kBAAC/B,GAAA,EAAKuB,MAAN,CAAYC,GAAIpC,IAAKqC,GAAG,IAAIC,UAAU,SACpC,kBAAC1B,GAAA,EAAK2B,MAAN,cACA,kBAAC3B,GAAA,EAAK4B,QAAN,CAAcC,UAAQ,EAAC9M,KAAK,QAAQ+M,YAAY,YAGpD,kBAAC9B,GAAA,EAAKb,IAAN,KACE,kBAACa,GAAA,EAAKuB,MAAN,CAAYC,GAAIpC,IAAKqC,GAAG,IAAIC,UAAU,YACpC,kBAAC1B,GAAA,EAAK2B,MAAN,iBACA,kBAAC3B,GAAA,EAAK4B,QAAN,CAAc7M,KAAK,OAAO+M,YAAY,MAAMD,UAAQ,KAEtD,kBAAC7B,GAAA,EAAKuB,MAAN,CAAYC,GAAIpC,IAAKqC,GAAG,KAEtB,kBAACzB,GAAA,EAAK2B,MAAN,CAAYlI,UAAU,cAAtB,SACA,kBAACuC,EAAA,EAAD,CAAQjH,KAAK,UAAb,c,6kBCvDZ,IAAMiN,GAAiB,SAAApO,GACrB,IAAMwN,EAASxN,EAAMwN,OACrB,OACE,yBACE5B,MAAO,GACPC,OAAQ,GACRhG,UAAU,sBACVyC,IAAK,uCAAyCkF,EAAS,OACvDjF,IAAK,wBAA0BiF,KAqFtBa,G,2MA/EbrK,MAAQ,CACNsK,OAAO,EACPnM,GAAI,KACJqL,OAAQ,KACRxE,QAAS,CAAEsE,SAAU,MACrBhN,UAAW,KACXiO,KAAM,KACNC,QAAS,I,EAGXC,e,sBAAiB,4BAAArM,EAAA,sEACOF,EAAa,UAAW,EAAKlC,MAAMmC,IAD1C,QACTrB,EADS,SAEFhB,EAAWgB,EAAS4N,KACjC,EAAK3J,SAAL,MAAmBjE,IAHJ,2C,EAMjBqD,kB,sBAAoB,sBAAA/B,EAAA,sEACZ,EAAKqM,iBADO,OAEd5M,KAAYwB,EAAc,eAAM,EAAKoL,gBAFvB,2C,EAKpBE,qBAAuB,WACjB9M,KAAYgC,EAAkB,iB,EAGpC+K,YAAc,WACZ,EAAK7J,SAAS,CAAEuJ,OAAQ,EAAKtK,MAAMsK,S,wEAG3B,IACAtK,EAA8BkB,KAA9BlB,MAAOhE,EAAuBkF,KAAvBlF,MAAO4O,EAAgB1J,KAAhB0J,YACdN,EAAyDtK,EAAzDsK,MAAOnM,EAAkD6B,EAAlD7B,GAAIqL,EAA8CxJ,EAA9CwJ,OAAQxE,EAAsChF,EAAtCgF,QAAS1I,EAA6B0D,EAA7B1D,UAAWiO,EAAkBvK,EAAlBuK,KAAMC,EAAYxK,EAAZwK,QACrD,IAAKxF,EAAS,OAAO,KAHd,IAIC6F,EAA+B7O,EAA/B6O,cAAehC,EAAgB7M,EAAhB6M,YACjBiC,EAAcD,EAClB,kBAAC9C,GAAD,CAAa1D,QAASnD,KAAK0J,cACzB,KAEJ,OACE,kBAACG,GAAA,EAAD,KACE,kBAAC,GAAmB/K,GACpB,kBAAC+K,GAAA,EAAM7G,KAAP,CAAYrC,UAAU,kBACpB,wBAAIA,UAAU,eACZ,kBAAC+E,GAAA,EAAD,CAAOC,QAAS,aACb2C,EADH,IACW,+BAAQe,KAGpBO,EANH,IAMgB,6BACd,kBAACE,GAAA,EAAD,CAAOnE,QAAS,YAAahF,UAAU,kBACpCmD,EAAQsE,UAEVuB,EACGL,EAAQlK,KAAI,SAAA2K,GAAC,OACXA,IAAM9M,EACJ,kBAACkM,EAAD,CAAkBrI,IAAKiJ,EAAG9M,GAAI8M,EAAGJ,eAAe,IAC9C,QAEN,KACHP,GAASO,EACR,kBAAC,GAAD,CACE/B,cAAe8B,EACf/B,YAAaA,EACbvM,UAAWA,EACXsM,QAASzK,IAET,W,GAlEiBgE,aCWhB+I,G,2MAhCblL,MAAQ,CAAEsK,OAAO,EAAOa,SAAU,I,EAElCP,YAAc,WACZ,EAAK7J,SAAS,CAAEuJ,OAAQ,EAAKtK,MAAMsK,S,wEAG3B,IAAD,OACP,OACE,yBAAKzI,UAAU,kBACb,wBAAIA,UAAU,mBAAd,YACA,kBAACkG,GAAD,CAAa1D,QAASnD,KAAK0J,cAC1B1J,KAAKlB,MAAMsK,MACV,kBAAC,GAAD,CACExB,cAAe5H,KAAK0J,YACpB/B,YAAa3H,KAAKlF,MAAM6M,YACxBvM,UAAW4E,KAAKlF,MAAMmC,KAEtB,KACH+C,KAAKlF,MAAMmP,SAAS7K,KAAI,SAAA8K,GAAC,OACxB,kBAAC,GAAD,CACEpJ,IAAKoJ,EACLC,QAAS,KACTlN,GAAIiN,EACJP,eAAe,EACfhC,YAAa,EAAK7M,MAAM6M,sB,GAzBH1G,aCsElBmJ,G,2MAvDbtL,MAAQ,G,EACR7B,GAAK,EAAKnC,MAAMmC,G,EAEhBoN,gB,sBAAkB,4BAAAnN,EAAA,sEACQF,EAAa,YAAa,EAAKC,IADvC,QACV7B,EADU,SAEDR,EAAWQ,EAAWkP,KACrC,EAAKzK,SAASzE,GAHE,2C,EAMlB6D,kB,sBAAoB,sBAAA/B,EAAA,sEACZ,EAAKmN,kBADO,OAEd1N,KAAYwB,EAAc,eAAM,EAAKkM,iBAFvB,2C,EAKpBZ,qB,sBAAuB,sBAAAvM,EAAA,sDACjBP,KAAYgC,EAAkB,gBADb,2C,EAIvBgJ,Y,sBAAc,sBAAAzK,EAAA,sEACN,EAAKmN,kBADC,2C,EAIdE,SAAW,CACTrE,KAAM,SAAAgE,GAAC,OAAI,kBAAC,GAAD,CAAcpG,QAASoG,KAClCM,SAAU,SAAAN,GAAC,OAAI,kBAAC,GAAD,CAAapG,QAASoG,KACrCO,UAAW,SAAAP,GAAC,OAAI,kBAAC,GAAD,CAAmBpG,QAASoG,EAAG3D,OAAQ,EAAKtJ,MAC5DyN,OAAQ,SAAAR,GAAC,OAAI,kBAAChH,EAAA,EAAD,CAAQ5C,KAAM4J,EAAEtJ,MAAOsJ,EAAEhE,OACtCyE,iBAAkB,SAAAT,GAAC,OAAI,kBAAC,GAAD,CAAkBpG,QAASoG,KAClDU,cAAe,SAAAV,GAAC,OAAI,kBAAC,GAAD,CAAepG,QAASoG,M,wEAGpC,IAAD,EACgClK,KAAKlB,MAApC7C,EADD,EACCA,KAAM6H,EADP,EACOA,QAAS+G,EADhB,EACgBA,YACjBC,EAAU9K,KAAKuK,SAAStO,GAC9B,GAAIA,GAAQ6O,EAAS,CACnB,IAAMb,EAAWY,EACf,kBAAC,GAAD,iBAAwB7K,KAAKlB,MAA7B,CAAoC6I,YAAa3H,KAAK2H,eACpD,KACJ,OACE,kBAACrB,EAAA,EAAD,CAAKxF,IAAKd,KAAK/C,IACZ6N,EAAQhH,GACRmG,GAIL,OACE,kBAAC,EAAD,CACEzI,UAAW,oBACXC,QAAS,iBAAmBzB,KAAK/C,GACjCoE,SAAU,Q,GAlDYJ,aCEjB8J,GAhBS,SAAAjQ,GACtB,OACE,kBAACiI,EAAA,EAAD,CAAM3C,MAAOtF,EAAMsF,OACjB,kBAAC2C,EAAA,EAAKC,KAAN,KACGlI,EAAM+I,IAAIzE,KAAI,SAAAnC,GACb,OACE,kBAACoJ,EAAA,EAAD,CAAKvF,IAAK7D,GACR,kBAAC,GAAD,CAAmB6D,IAAK7D,EAAIA,GAAIA,W,mOCoJ/B+N,G,2MAxJblM,MAAQ,G,EAGRA,MAAQ,CAAEmM,SAAU,KAAMC,WAAY,KAAMC,UAAW,M,EAEvDC,aAAe,CAAC,CAAC,IAAK,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,EAAG,I,EAE7CnM,kBAAoB,WAClB,IAgBMoM,EAhBgB,CACpBC,OAAQ,CAAEJ,WAAY,EAAKE,aAAa,GAAG,IAC3C,aAAc,CACZH,SAAU,EAAKG,aAAa,GAAG,GAC/BF,WAAY,EAAKE,aAAa,GAAG,IAEnC,cAAe,CACbF,WAAY,EAAKE,aAAa,GAAG,GACjCD,UAAW,EAAKC,aAAa,GAAG,IAElCG,OAAQ,CACNN,SAAU,EAAKG,aAAa,GAAG,GAC/BF,WAAY,EAAKE,aAAa,GAAG,GACjCD,UAAW,EAAKC,aAAa,GAAG,KAGF,EAAKtQ,MAAMU,OAAOgQ,YAChDH,EACF,EAAKxL,SAASwL,GAEd,EAAKxL,SAAS,CACZoL,SAAU,EACVC,WAAY,EACZC,UAAW,K,wEAKP,IAkBeM,EAAGC,EAAG3B,EAlBtB,EACqC/J,KAAKlB,MAAzCmM,EADD,EACCA,SAAUC,EADX,EACWA,WAAYC,EADvB,EACuBA,UADvB,EAEoCnL,KAAKlF,MAAxC6Q,EAFD,EAECA,OAAQC,EAFT,EAESA,OAAQC,EAFjB,EAEiBA,OAAQrQ,EAFzB,EAEyBA,OACPgQ,GAAehQ,EAAhC2D,gBAAgC3D,EAAfgQ,YAEnBM,E,2WAAa,IAAQtQ,EAAR,CAAgB2D,gBdoC9B,0BclCC4M,EAAUd,EACd,kBAAC,GAAD,CAAiB7K,MAAO0L,EAAejI,IAAK8H,IAC1C,KAEEK,EAAY,kBAAC,GAAD,CAAiB5L,MAAO0L,EAAejI,IAAK+H,IAExDK,EAAWd,EACf,kBAAC,GAAD,CAAiB/K,MAAO0L,EAAejI,IAAKgI,IAC1C,KAmDJ,MAAmB,WAAfL,EAEA,kBAACU,EAAA,EAAD,CAAWC,OAAO,EAAMxL,UAAU,eAC/BqL,GAIL,kBAACE,EAAA,EAAD,CAAWC,OAAO,GAChB,yBAAKxL,UAAU,qBAEb,kBAACyL,EAAA,EAAD,CAAMzL,UAAU,yBAAyB0L,iBAAiB,UACvDpB,EACC,kBAACqB,EAAA,EAAD,CAAKC,SAAS,OAAOxL,MAAM,4BACxBgL,GAED,KACJ,kBAACO,EAAA,EAAD,CAAKC,SAAS,SAASxL,MAAM,8CAC1BiL,GAEFb,EACC,kBAACmB,EAAA,EAAD,CAAKC,SAAS,QAAQxL,MAAM,4BACzBkL,GAED,OAGR,yBAAKtL,UAAU,gCA1EO+K,EA4EIM,EA5EDjC,EA4EYkC,GA5ElBR,EA4EFM,IA3EVhC,EAEL,kBAAC1D,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK3F,UAAU,cAAc6L,GAAI,GAC/B,kBAACJ,EAAA,EAAD,CAAMzL,UAAU,yBAAyB0L,iBAAiB,QACvDpB,EACC,kBAACqB,EAAA,EAAD,CAAKC,SAAS,OAAOxL,MAAM,4BACxB0K,GAED,KACHN,EACC,kBAACmB,EAAA,EAAD,CAAKC,SAAS,QAAQxL,MAAM,4BACzBgJ,GAED,OAGR,kBAACzD,EAAA,EAAD,CAAK3F,UAAU,cAAc6L,GAAI,GAC9Bd,IAILD,EAEA,kBAACpF,EAAA,EAAD,KACG,IACD,kBAACC,EAAA,EAAD,CAAK3F,UAAU,cAAc6L,GAAI,GAC9Bf,GAEH,kBAACnF,EAAA,EAAD,CAAK3F,UAAU,cAAc6L,GAAI,GAC9Bd,IAIL3B,EAEA,kBAAC1D,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK3F,UAAU,cAAc6L,GAAI,GAC9Bd,GAEH,kBAACpF,EAAA,EAAD,CAAK3F,UAAU,cAAc6L,GAAI,GAC9BzC,IAIF,OAgCL,yBAAKpJ,UAAU,qBAEb,kBAAC0F,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKqC,GAAIsC,EAAUtK,UAAU,eAC1BoL,GAGH,kBAACzF,EAAA,EAAD,CAAKqC,GAAIuC,EAAYvK,UAAU,eAC5BqL,GAEH,kBAAC1F,EAAA,EAAD,CAAKqC,GAAIwC,EAAWxK,UAAU,eAC3BsL,U,GAhJehL,aCafwL,GAbQ,SAAA3R,GACrB,IAAMsF,EAAQ,CAAEjB,iBAAiCrE,EAAMqE,gBf6EhD,0Be5EP,OACE,kBAAC+M,EAAA,EAAD,CAAWC,OAAO,EAAMxL,UAAU,cAChC,kBAACoC,EAAA,EAAD,CAAM3C,MAAOA,GACX,kBAAC2C,EAAA,EAAKC,KAAN,KACE,4BAAKlI,EAAM4R,iBCiBNC,OAbf,SAAuBC,GAEP5P,EAAa,QAAS4P,GAC9BpN,MACJ,SAAAE,GACMA,EAAIzC,IAlBd,SAAuBmG,GACrB,IAAIyJ,EAAUtQ,SAASuQ,MAAQvQ,SAASwQ,qBAAqB,QAAQ,GACjEnM,EAAOrE,SAASyQ,cAAc,QAChCC,EAAU1Q,SAAS2Q,eAAe,mBACpCtM,EAAK3D,GAAK,kBACV2D,EAAKuM,IAAM,gBACXvM,EAAKN,KAAO8C,EACR6J,GACFJ,EAAQO,YAAYH,GAEtBJ,EAAQQ,YAAYzM,GAQJ0M,CAAc5N,EAAI6E,mBAEhC,SAAAgJ,GACE9Q,QAAQK,IAAIyQ,OCNZC,GAAa,CACjBhM,UAAW,mDACXC,QAAS,mEACTJ,SAAU,GAGNoM,GAAc,SAAAxQ,GAAE,MAAK,CACzBuE,UAAW,uBAAyBvE,EACpCwE,QAAS,uDACTJ,SAAU,IAGNqM,GAAgB,SAAAzQ,GAAE,MAAK,CAC3BuE,UAAW,yBAA2BvE,EACtCwE,QAAS,kBAAoBxE,EAC7BoE,SAAU,IA+FGsM,G,2MApFb7O,MAAQ,CACN8O,aAAa,EACbpS,QAAQ,EACRgG,UAAW,cACXC,QAAS,GACTJ,SAAU,G,EAGZwM,U,uCAAY,WAAMvS,GAAN,iBAAA4B,EAAA,6DACF1B,EAAWF,EAAXE,OACRZ,EAAWU,EAAMwS,KACjBvR,SAASwE,MAAQzF,EAAKyF,MAHZ,SAKgB/D,EAAa,SAAUxB,GALvC,QAKNuS,EALM,SAOWA,EAAc9Q,IACjCrC,EAAWmT,EAAeC,KAC1B1S,EAAKE,OAASuS,EACVA,EAAcE,YAAYtB,GAAcoB,EAAcnB,QAC1D,EAAK/M,SAAS,CAAE+N,YAAatS,EAAME,OAAQuS,KAE3C,EAAKlO,SAAS6N,GAAclS,IAbpB,2C,wDAiBZ0S,a,sBAAe,gCAAAhR,EAAA,6DAGPiR,EAAW,IAAI7R,IAAIC,SAASD,KAAK8R,SAH1B,SAKIpR,EAAa,OAAQmR,GALzB,WAKbE,EALa,SAOKA,EAASpR,GAPd,sBASXqR,EAASH,EAASI,MAAM,KAAKC,OATlB,iCAUkBxR,EAAa,OAAQsR,GAVvC,OAUCD,EAVD,kBAaRA,GAAaA,EAASpR,GAbd,oBAcM,MAAbkR,EAdO,wBAgBT,EAAKtO,SAAS2N,IACdhF,WAAW,EAAK0F,aAAc,KAjBrB,2BAqBX,EAAKrO,SAAS4N,GAAYa,IACrBD,GAAaA,EAASpR,IACzBuL,YAAW,WACThO,OAAOC,SAAS6F,KAAO,IAAIhE,IAAIC,SAASD,KAAKE,SAC5C,KAzBM,eA4BT6R,GAAYA,EAASpR,IACvB,EAAK4Q,UAAUQ,GA7BJ,+D,EAkCfpP,kB,sBAAoB,sBAAA/B,EAAA,sEACZ,EAAKgR,eADO,OAEdvR,KAAYwB,EAAc,eAAM,EAAK+P,cAFvB,2C,sFAMdvR,KAAYgC,EAAkBqB,Q,+BAG1B,IAAD,EACyBA,KAAKlB,MAA7B8O,EADD,EACCA,YAAapS,EADd,EACcA,OACrB,GAAIoS,GAAepS,EAAQ,CAAC,IAClBiT,EAAmBjT,EAAnBiT,OAAQC,EAAWlT,EAAXkT,OAChB,OACE,kBAACxC,EAAA,EAAD,CAAWC,OAAO,EAAMxL,UAAU,gBAAgBP,MAAO5E,GACtDiT,EAAS,kBAAC,EAAuBjT,GAAa,KAC/C,kBAAC,GAAD,iBAAqBwE,KAAKlB,MAAW8O,IACpCc,EAAS,kBAAC,GAAmBlT,GAAa,MAIjD,OAAO,kBAAC,EAAawE,KAAKlB,W,GAxFHmC,aCpB3B0N,IAAStK,OAAO,mBAJhB,WACE,OAAO,kBAAC,GAAD,QAGO,MAAS9H,SAAS2Q,eAAe,SnBiH3C,kBAAmB0B,WACrBA,UAAUC,cAAcC,MAAMtP,MAAK,SAAAuP,GACjCA,EAAaC,iB","file":"static/js/main.e755e8fd.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  development,\n  hostname,\n  port,\n  apiLocation,\n  componentLocation,\n  hostPrefix,\n  getPageLocation,\n  getLayoutLocation,\n  imageLocation,\n  commentLocation,\n  pathLocation,\n  logConnectionErrors,\n  defaultUrl,\n  updateInterval,\n  liveUpdate\n} from \"../defaults.json\";\nimport axios from \"axios\";\n\n/* #############################\n   ### FURTHER FIELD PARSING ###\n   ############################# */\nexport function parseProps(obj, props) {\n  props.forEach(p => {\n    const prop = obj[p]; // if the prop exists, parse it\n    if (prop) obj[p] = JSON.parse(obj[p]);\n  });\n}\n\n/* #################\n   ### API CALLs ###\n   ################# */\nconst locations = {\n  component: componentLocation,\n  page: getPageLocation,\n  layout: getLayoutLocation,\n  image: imageLocation,\n  comment: commentLocation,\n  path: pathLocation\n};\n\nif (development)\n  console.warn(\n    \"Running in development mode.\",\n    !liveUpdate ? \"Live updates are possible but currently disabled\" : null\n  );\nfunction getURL(type) {\n  // eg.: http://localhost:3001/api/layout/123456789\n  if (development)\n    return hostPrefix + hostname + port + apiLocation + locations[type];\n  return new URL(document.URL).origin + apiLocation + locations[type];\n}\n\nconst defErrF = logConnectionErrors ? console.log : n => {};\n\nexport async function getApiObject(type, id, errorf = defErrF) {\n  let response;\n  switch (type) {\n    case \"path\":\n      id = id.slice(1);\n      if (!id) id = defaultUrl;\n      response = await axios.get(getURL(\"page\") + id, {\n        params: { field: \"url\" }\n      });\n      break;\n    default:\n      // default behaviour is simple get-request\n      response = await axios.get(getURL(type) + id).catch(errorf);\n      break;\n  }\n  if (response && response.data) return response.data;\n  return null;\n}\n\nexport async function postApiObject(type, id, object, errorf = defErrF) {\n  const response = await axios.post(getURL(type) + id, object).catch(errorf);\n  if (response && response.data) return response.data;\n  return null;\n}\n\n/* #############################\n   ### COMPLEMENT COLOR CALC ###\n   ############################# */\nexport function complementColor(rgb) {\n  return \"rgba(255,255,255,0.5)\";\n}\n\n/* ###############################\n   ### SELFUPDATING COMPONENTS ###\n   ############################### */\n\n// To assign unique ID per object // https://stackoverflow.com/a/9957331\nlet __next_objid = 1;\nfunction objectId(obj) {\n  if (obj == null) return null;\n  if (obj.__obj_id == null) obj.__obj_id = __next_objid++;\n  return obj.__obj_id;\n}\n\n/*\nAs every component requires details from the backend\nto know how they will be rendered, it's possible to\nfetch changes every n (mili-)seconds. As these changes\nwill affect the components, these will be set in their\nstate. The way React handles states, this means these\ncomponents will update reactive. Because these changes\nrequire an update-callback specific per component, but\nfurther no changes, we can generarlise this here in this\ndocument.\n\nThese next functions provide the general update approach\n*/\n\nconst components = {};\n\nexport function requestUpdate(component, updateCallback) {\n  // if not developing, return early\n  if (!development) return;\n  // prepare async update function\n  async function update() {\n    const tools = components[objectId(component)];\n    if (tools.prevDone) {\n      tools.prevDone = false;\n      await tools.callback();\n      tools.prevDone = true;\n    }\n  }\n\n  // add callback and updatefunction to datastructure\n  components[objectId(component)] = {\n    callback: updateCallback,\n    prevDone: true,\n    interval: setInterval(update, updateInterval)\n  };\n}\n\nexport function stopRequestUpdate(component) {\n  // if not developing, return early\n  if (!development) return;\n  // remove and stop calling update function\n  clearInterval(components[objectId(component)].interval);\n  delete components[objectId(component)]; // to save memory\n}\n","import React, { Component } from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport { getApiObject, complementColor } from \"./generalFunctions\";\n\nclass NavigationRenderer extends Component {\n  state = { brand: null, pages: [] };\n\n  componentDidMount = async () => {\n    const { brand, navcontent, backgroundColor } = this.props;\n    const pages = navcontent\n      ? navcontent.map(page => getApiObject(\"page\", page))\n      : [];\n    const invalidIdx = [];\n    Promise.all(pages).then(pages => {\n      pages = pages\n        // filter out invalid pages, which are \"\", handled as a negative boolean\n        .filter((res, idx) => {\n          if (!res) invalidIdx.push(idx);\n          return !!res;\n        });\n      this.setState({\n        brand: brand,\n        pages: pages,\n        invalidPages: invalidIdx,\n        backgroundColor: complementColor(backgroundColor)\n      });\n    });\n  };\n\n  render() {\n    const home = new URL(document.URL).origin;\n    const { brand, pages } = this.state;\n    return (\n      <Navbar collapseOnSelect expand=\"lg\" style={this.state}>\n        {brand ? <Navbar.Brand href={home}>{brand}</Navbar.Brand> : null}\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            {pages.map(link => (\n              // This implies every name must be unique!\n              <Nav.Link key={link.title} href={home + \"/\" + link.url}>\n                {link.title}\n              </Nav.Link>\n            ))}\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n\nexport default NavigationRenderer;\n","import React from \"react\";\nimport { infoLogPage, development } from \"../defaults.json\";\n\nconst ErrorLog = props => {\n  const severitieMsg = [\"Info\", \"Note\", \"Warning\", \"ERROR\"];\n  const severities = [\"black\", \"blue\", \"orange\", \"red\"];\n  const sevirityIdx = props.severity ? props.severity : 0;\n  const severity = severities[sevirityIdx];\n  const style = { color: severity };\n  if (infoLogPage) {\n    return (\n      <div>\n        <h1 style={style}>\n          {severitieMsg[sevirityIdx]}: {props.statement}\n        </h1>\n        <h2 style={style}>Details: {props.details}</h2>\n      </div>\n    );\n  }\n  if (development)\n    console.log(\n      severitieMsg[sevirityIdx] +\n        \":\" +\n        props.statement +\n        \"\\nDetails:\" +\n        props.details\n    );\n  return null;\n};\n\nexport default ErrorLog;\n","import React, { Component } from \"react\";\nimport { Map, TileLayer, Marker } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport { Button, Card } from \"react-bootstrap\";\nimport \"./leafletStyling.css\";\n\nconst defaultIcon = L.icon({\n  iconUrl:\n    \"http://images.clipartpanda.com/google-location-icon-location_black.png\",\n  iconSize: [35, 35],\n  iconAnchor: [22, 94],\n  popupAnchor: [-3, -76],\n  shadowSize: [68, 95],\n  shadowAnchor: [22, 94]\n});\n\nclass LeafletHover extends Component {\n  state = { mapOpen: false };\n\n  toggleMap = () => {\n    const newState = this.state;\n    newState.mapOpen = !newState.mapOpen;\n    this.setState(newState);\n  };\n\n  // to render the map\n  leafletMap = position => (\n    <Map className=\"map\" center={position} zoom={13}>\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n      />\n      <Marker position={position} icon={defaultIcon} />\n    </Map>\n  );\n\n  render() {\n    const map = this.state.mapOpen ? (\n      <Card className=\"mapHolder\">\n        <Card.Body>{this.leafletMap(this.props.location)}</Card.Body>\n      </Card>\n    ) : null;\n\n    const openMapButton = (\n      <Button className=\"mapBttn\" onClick={this.toggleMap}>\n        {this.state.mapOpen ? (\n          <b>X</b>\n        ) : (\n          <img\n            className=\"locationIcon\"\n            src=\"http://images.clipartpanda.com/google-location-icon-location_black.png\"\n            alt=\"location\"\n          />\n        )}\n      </Button>\n    );\n\n    return (\n      <div className=\"leafletHolder\">\n        <h1 className=\"locationName\">{this.props.caption}</h1>\n        {this.props.location ? (\n          <div>\n            {openMapButton}\n            {map}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default LeafletHover;\n","import React, { Component } from \"react\";\nimport Gallery from \"react-photo-gallery\";\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\nimport {\n  getApiObject,\n  requestUpdate,\n  stopRequestUpdate\n} from \"../generalFunctions\";\nimport LeafletHover from \"./leafletHover\";\nimport { liveUpdate } from \"../../defaults.json\";\n\nclass PictureFolder extends Component {\n  state = {\n    currentImage: 0,\n    viewerIsOpen: false,\n    images: [],\n    invalidImages: false\n  };\n\n  updatePictures = async () => {\n    const { ids } = this.props.content;\n    if (!ids) return null; // No pictures provided\n    const images = ids.map(id => getApiObject(\"image\", id));\n    const invalidIdx = [];\n    Promise.all(images).then(images => {\n      images = images\n        // filter out invalid images, which are \"\", handled as a negative boolean\n        .filter((res, idx) => {\n          if (!res) invalidIdx.push(idx);\n          return !!res;\n        })\n        .filter(res => {\n          return res.id;\n        })\n        // make database object compatible\n        .map(i => ({ ...i }));\n      this.setState({ images: images, invalidImages: invalidIdx });\n    });\n  };\n\n  componentDidMount = async () => {\n    await this.updatePictures();\n    if (liveUpdate) requestUpdate(this, this.updatePictures);\n  };\n\n  componentWillUnmount() {\n    if (liveUpdate) stopRequestUpdate(this);\n  }\n\n  openLightbox = (event, { photo, index }) => {\n    this.setState({ currentImage: index, viewerIsOpen: true });\n  };\n\n  closeLightbox = () => {\n    this.setState({ currentImage: 0, viewerIsOpen: false });\n  };\n\n  render = () => {\n    let { images } = this.state;\n    if (!images) return null;\n\n    const thumbnails = images.map(i => ({\n      ...i, // other properties of the image\n      src: i.compressed_src ? i.compressed_src : i.src // thumbnail (if exists, else full-size)\n    }));\n\n    const customFooter = ({ innerProps, currentIndex }) => {\n      if (!this.props.content.locationActive) return null;\n      const lat = images[currentIndex].lat;\n      const long = images[currentIndex].long;\n      // only provide location when it's specified\n      const imgLocation = lat && long ? [lat, long] : null;\n      return (\n        <LeafletHover\n          caption={images[currentIndex].title}\n          location={imgLocation}\n        ></LeafletHover>\n      );\n    };\n\n    return (\n      <div>\n        <Gallery photos={thumbnails} onClick={this.openLightbox} />\n        <ModalGateway>\n          {this.state.viewerIsOpen ? (\n            <Modal onClose={this.closeLightbox}>\n              <Carousel\n                currentIndex={this.state.currentImage}\n                views={images}\n                components={{\n                  Footer: customFooter\n                }}\n              />\n            </Modal>\n          ) : null}\n        </ModalGateway>\n      </div>\n    );\n  };\n}\n\nexport default PictureFolder;\n","import React, { Component } from \"react\";\nimport Carousel from \"react-images\";\nimport { Badge } from \"react-bootstrap\";\nimport { getApiObject } from \"../generalFunctions\";\nimport \"../woxLayout.css\";\n\nclass WoxCarousel extends Component {\n  state = { images: [], invalidImages: [] };\n\n  componentDidMount = async () => {\n    const { ids } = this.props.content;\n    if (!ids) return; // no id's were provided\n    const images = ids.map(id => getApiObject(\"image\", id));\n    const invalidIdx = [];\n    Promise.all(images).then(images => {\n      images = images\n        // filter out invalid images, which are \"\", handled as a negative boolean\n        .filter((res, idx) => {\n          if (!res) invalidIdx.push(idx);\n          return !!res;\n        })\n        // make database object compatible\n        .map(i => ({ ...i, source: i.src }));\n      this.setState({ images: images, invalidImages: invalidIdx });\n    });\n  };\n\n  CurstomFooter = ({ currentIndex }) => {\n    const { captionActive, customCaption, singleCaption } = this.props.content;\n    if (!captionActive) return null;\n    const captionIdx = singleCaption ? 0 : currentIndex;\n    const caption = customCaption\n      ? this.props.content.captions[captionIdx]\n      : this.state.images[captionIdx].caption;\n    return (\n      <h1 className=\"carouselCaption\">\n        <Badge variant=\"dark\">{caption}</Badge>\n      </h1>\n    );\n  };\n\n  render() {\n    const { images } = this.state;\n    if (!images[0]) return null; // No images to render\n    return images ? (\n      <Carousel views={images} components={{ Footer: this.CurstomFooter }} />\n    ) : null;\n  }\n}\n\nexport default WoxCarousel;\n","import React from \"react\";\nimport { Converter } from \"showdown\";\n\nconst TextRenderer = props => {\n  const markdownConverter = new Converter();\n  return (\n    // Inserting html poses a security risk, however only the admin has these rights!\n    <div\n      dangerouslySetInnerHTML={{\n        __html: markdownConverter.makeHtml(props.content.text)\n      }}\n    />\n  );\n};\n\nexport default TextRenderer;\n","import React from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport ComponentRenderer from \"../componentRenderer.jsx\";\nimport ErrorLog from \"../errorLog.jsx\";\n\nconst ContainerRenderer = props => {\n  const { style, ids } = props.content;\n  let ReactComp = Row;\n  if (style === \"horizontal\") ReactComp = Col;\n  if (style === \"vertical\") ReactComp = Row;\n  if (!ids) return null;\n  return (\n    <ReactComp>\n      {ids.map(id => {\n        return id !== props.parent ? (\n          <Col key={id}>\n            <div key={id}>\n              <ComponentRenderer key={id} id={id} />\n            </div>\n          </Col>\n        ) : (\n          <ErrorLog\n            key={id}\n            statement={\"Container tried to render self\"}\n            details={\"Component id: \" + id}\n            severity={2}\n          />\n        );\n      })}\n    </ReactComp>\n  );\n};\n\nexport default ContainerRenderer;\n","import React, { Component } from \"react\";\nimport { getApiObject } from \"./../generalFunctions\";\n\nclass CliclablePictureRenderer extends Component {\n  state = {\n    caption: null,\n    src: null,\n    small: null,\n    width: null,\n    height: null,\n    location: null\n  };\n\n  updatePicture = async () => {\n    let image = await getApiObject(\"image\", this.props.content.id);\n    this.setState({ ...image });\n  };\n\n  componentDidMount = async () => {\n    await this.updatePicture();\n  };\n\n  render() {\n    const { caption, src } = this.state;\n    if (!src) return null; // picture not loaded yet or invalid id\n    return (\n      <a href={this.props.content.link}>\n        <img src={src} alt={caption}></img>\n      </a>\n    );\n  }\n}\n\nexport default CliclablePictureRenderer;\n","import React, { useState } from \"react\";\nimport { Button, Form, Col } from \"react-bootstrap\";\nimport { postApiObject } from \"../generalFunctions\";\nimport \"./../woxLayout.css\";\n\nconst Reply = props => {\n  const [validated, setValidated] = useState(false);\n\n  const handleSubmit = event => {\n    event.preventDefault(); // default behaviour would be to refresh page\n    const form = event.target;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    } else {\n      const { component, replyId, handleReply, handleVisible } = props;\n      const response = {};\n      const values = Object.keys(form)\n        .map(id => ({ id: form[id].id, value: form[id].value }))\n        .filter(o => !!o.value);\n      values.forEach(obj => {\n        response[obj.id] = obj.value; // prepare response\n      });\n      const { firstName, lastName, reaction } = response;\n      const required = {\n        author: firstName + \" \" + lastName,\n        content: JSON.stringify({ reaction: reaction }),\n        component: component\n      };\n      const id = replyId ? replyId : \"\";\n      postApiObject(\"comment\", id, required);\n      setTimeout(async () => {\n        values.forEach(obj => (form[obj.id].value = \"\")); // clear form;\n        if (handleVisible) handleVisible(); // close form\n        if (handleReply) await handleReply(); // refresh comment section\n      }, 1000);\n    }\n    setValidated(true);\n    // firstName, lastName, email, reaction\n  };\n\n  return (\n    <div className=\"replyForm\">\n      <Form noValidate validated={validated} onSubmit={handleSubmit}>\n        <Form.Row>\n          <Form.Group as={Col} md=\"4\" controlId=\"firstName\">\n            <Form.Label>First name</Form.Label>\n            <Form.Control required type=\"text\" placeholder=\"First name\" />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group as={Col} md=\"4\" controlId=\"lastName\">\n            <Form.Label>Last name</Form.Label>\n            <Form.Control required type=\"text\" placeholder=\"Last name\" />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group as={Col} md=\"4\" controlId=\"email\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control required type=\"email\" placeholder=\"Email\" />\n          </Form.Group>\n        </Form.Row>\n        <Form.Row>\n          <Form.Group as={Col} md=\"9\" controlId=\"reaction\">\n            <Form.Label>Reaction</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"...\" required />\n          </Form.Group>\n          <Form.Group as={Col} md=\"3\">\n            {/*to make sure this form looks correct*/}\n            <Form.Label className=\"fakeHeader\">send!</Form.Label>\n            <Button type=\"submit\">send!</Button>\n          </Form.Group>\n        </Form.Row>\n      </Form>\n    </div>\n  );\n};\n\nexport function ReplyButton(props) {\n  return (\n    <Button variant=\"secondary\" className=\"replyButton\" onClick={props.onClick}>\n      <img\n        width=\"20rem\"\n        height=\"20rem\"\n        src=\"https://cdn4.iconfinder.com/data/icons/ionicons/512/icon-reply-512.png\"\n        alt=\"reply-icon\"\n      />\n    </Button>\n  );\n}\n\nexport default Reply;\n","import React, { Component } from \"react\";\nimport { Media, Alert, Badge } from \"react-bootstrap\";\nimport {\n  getApiObject,\n  parseProps,\n  requestUpdate,\n  stopRequestUpdate\n} from \"../generalFunctions\";\nimport Reply, { ReplyButton } from \"./reply\";\nimport { commentParseProps, liveUpdate } from \"../../defaults.json\";\n\nimport \"./../woxLayout.css\";\n\nconst ProfilePicture = props => {\n  const author = props.author;\n  return (\n    <img\n      width={64}\n      height={64}\n      className=\"mr-3 profilePicture\"\n      src={\"https://api.adorable.io/avatars/400/\" + author + \".png\"}\n      alt={\"Picture representing \" + author}\n    />\n  );\n};\n\nclass CommentsRenderer extends Component {\n  state = {\n    reply: false,\n    id: null, // to fetch from backend\n    author: null, // Aäron Munsters\n    content: { reaction: null /*\"Very nice picture!\"*/ },\n    component: null, // \"l1\" (id of WoxComponent which contains the comments)\n    date: null, // \"07-09-2019\"\n    replies: [] // [\"commentX\", \"commentY\", \"commentZ\"]\n  };\n\n  updateComments = async () => {\n    const comment = await getApiObject(\"comment\", this.props.id);\n    if (comment) parseProps(comment, commentParseProps);\n    this.setState({ ...comment });\n  };\n\n  componentDidMount = async () => {\n    await this.updateComments();\n    if (liveUpdate) requestUpdate(this, this.updateComments);\n  };\n\n  componentWillUnmount = () => {\n    if (liveUpdate) stopRequestUpdate(this);\n  };\n\n  toggleReply = () => {\n    this.setState({ reply: !this.state.reply });\n  };\n\n  render() {\n    const { state, props, toggleReply } = this;\n    const { reply, id, author, content, component, date, replies } = state;\n    if (!content) return null;\n    const { allowChildren, handleReply } = props;\n    const replyButton = allowChildren ? (\n      <ReplyButton onClick={this.toggleReply} />\n    ) : null;\n\n    return (\n      <Media>\n        <ProfilePicture {...state} />\n        <Media.Body className=\"profileSection\">\n          <h5 className=\"profileName\">\n            <Badge variant={\"secondary\"}>\n              {author} <small>{date}</small>\n            </Badge>\n          </h5>\n          {replyButton} <br />\n          <Alert variant={\"secondary\"} className=\"reactionHolder\">\n            {content.reaction}\n          </Alert>\n          {allowChildren // Because this prop is not passed to reactions, replies are anly rendered 1 level deep\n            ? replies.map(r =>\n                r !== id ? (\n                  <CommentsRenderer key={r} id={r} allowChildren={false} />\n                ) : null\n              )\n            : null}\n          {reply && allowChildren ? (\n            <Reply\n              handleVisible={toggleReply}\n              handleReply={handleReply}\n              component={component}\n              replyId={id}\n            />\n          ) : null}\n        </Media.Body>\n      </Media>\n    );\n  }\n}\n\n// Only one level of comments is allowed, thus infinite recursive calls are prevented\n// If this wasn't so a possible case would be:\n// {id: 1, ..., reactions: [2]}\n// {id: 2, ..., reactions: [3]}\n// {id: 3, ..., reactions: [1]}\n// Which would render these three reactions forever\n\nexport default CommentsRenderer;\n","import React, { Component } from \"react\";\nimport CommentsRenderer from \"./comments\";\nimport Reply, { ReplyButton } from \"./reply\";\n\nclass CommentingRenderer extends Component {\n  state = { reply: false, comments: [] };\n\n  toggleReply = () => {\n    this.setState({ reply: !this.state.reply });\n  };\n\n  render() {\n    return (\n      <div className=\"commentsHolder\">\n        <h2 className=\"commentsDisplay\">Comments</h2>\n        <ReplyButton onClick={this.toggleReply} />\n        {this.state.reply ? (\n          <Reply\n            handleVisible={this.toggleReply}\n            handleReply={this.props.handleReply}\n            component={this.props.id}\n          />\n        ) : null}\n        {this.props.comments.map(c => (\n          <CommentsRenderer\n            key={c}\n            parrent={null}\n            id={c}\n            allowChildren={true}\n            handleReply={this.props.handleReply}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default CommentingRenderer;\n","import React, { Component } from \"react\";\nimport { Button, Col } from \"react-bootstrap\";\nimport {\n  parseProps,\n  getApiObject,\n  requestUpdate,\n  stopRequestUpdate\n} from \"./generalFunctions\";\nimport ErrorLog from \"./errorLog.jsx\";\nimport { ComponentParseProps, liveUpdate } from \"../defaults.json\";\n\nimport PictureFolder from \"./woxComponents/pictureFolder\";\nimport WoxCarousel from \"./woxComponents/carousel\";\nimport TextRenderer from \"./woxComponents/textRenderer.jsx\";\nimport ContainerRenderer from \"./woxComponents/containerRenderer\";\nimport ClickablePicture from \"./woxComponents/clickablePictureRenderer\";\nimport CommentingRenderer from \"./woxComponents/commenting\";\n\nclass ComponentRenderer extends Component {\n  state = {};\n  id = this.props.id;\n\n  updateComponent = async () => {\n    const component = await getApiObject(\"component\", this.id);\n    if (component) parseProps(component, ComponentParseProps);\n    this.setState(component);\n  };\n\n  componentDidMount = async () => {\n    await this.updateComponent();\n    if (liveUpdate) requestUpdate(this, this.updateComponent);\n  };\n\n  componentWillUnmount = async () => {\n    if (liveUpdate) stopRequestUpdate(this);\n  };\n\n  handleReply = async () => {\n    await this.updateComponent();\n  };\n\n  handlers = {\n    text: c => <TextRenderer content={c} />,\n    carousel: c => <WoxCarousel content={c} />,\n    container: c => <ContainerRenderer content={c} parent={this.id} />,\n    button: c => <Button href={c.link}>{c.text}</Button>,\n    clickablePicture: c => <ClickablePicture content={c} />,\n    pictureFolder: c => <PictureFolder content={c} />\n  };\n\n  render() {\n    const { type, content, commentable } = this.state;\n    const handler = this.handlers[type];\n    if (type && handler) {\n      const comments = commentable ? (\n        <CommentingRenderer {...this.state} handleReply={this.handleReply} />\n      ) : null;\n      return (\n        <Col key={this.id}>\n          {handler(content)}\n          {comments}\n        </Col>\n      );\n    } else\n      return (\n        <ErrorLog\n          statement={\"Unknown component\"}\n          details={\"Component id: \" + this.id}\n          severity={3}\n        />\n      );\n  }\n}\n\nexport default ComponentRenderer;\n","import React from \"react\";\nimport { Card, Row } from \"react-bootstrap\";\nimport ComponentRenderer from \"./componentRenderer\";\n\nconst CompColRenderer = props => {\n  return (\n    <Card style={props.style}>\n      <Card.Body>\n        {props.ids.map(id => {\n          return (\n            <Row key={id}>\n              <ComponentRenderer key={id} id={id} />\n            </Row>\n          );\n        })}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default CompColRenderer;\n","import React, { Component } from \"react\";\nimport { Container, Row, Col, Tab, Tabs } from \"react-bootstrap\";\nimport CompColRenderer from \"./compColRenderer\";\nimport { complementColor } from \"./generalFunctions\";\nimport \"./woxLayout.css\";\n\nclass ColumnsRenderer extends Component {\n  state = {};\n\n  // as according to react-bootstrap these must add up to 12\n  state = { leftSize: null, middleSize: null, rightSize: null };\n\n  defaultSizes = [[12], [3, 9], [9, 3], [3, 6, 3]];\n\n  componentDidMount = () => {\n    const choiceHandler = {\n      single: { middleSize: this.defaultSizes[0][0] },\n      \"small-left\": {\n        leftSize: this.defaultSizes[1][0],\n        middleSize: this.defaultSizes[1][1]\n      },\n      \"small-right\": {\n        middleSize: this.defaultSizes[2][0],\n        rightSize: this.defaultSizes[2][1]\n      },\n      triple: {\n        leftSize: this.defaultSizes[3][0],\n        middleSize: this.defaultSizes[3][1],\n        rightSize: this.defaultSizes[3][2]\n      }\n    };\n    const validChoice = choiceHandler[this.props.layout.columnType];\n    if (validChoice) {\n      this.setState(validChoice);\n    } else {\n      this.setState({\n        leftSize: 4,\n        middleSize: 4,\n        rightSize: 4\n      });\n    }\n  };\n\n  render() {\n    const { leftSize, middleSize, rightSize } = this.state;\n    const { compsL, compsM, compsR, layout } = this.props;\n    const { backgroundColor, columnType } = layout;\n    const bgc = complementColor(backgroundColor);\n    const comCollsStyle = { ...layout, backgroundColor: bgc };\n\n    const leftCol = leftSize ? (\n      <CompColRenderer style={comCollsStyle} ids={compsL} />\n    ) : null;\n\n    const middleCol = <CompColRenderer style={comCollsStyle} ids={compsM} />;\n\n    const rightCol = rightSize ? (\n      <CompColRenderer style={comCollsStyle} ids={compsR} />\n    ) : null;\n\n    /*## When the window is medium-to-large, small windows ##*/\n    const sidebarSwitch = (l, m, r) => {\n      if (l && r)\n        return (\n          <Row>\n            <Col className=\"pageColumns\" sm={4}>\n              <Tabs className=\"justify-content-center\" defaultActiveKey=\"Left\">\n                {leftSize ? (\n                  <Tab eventKey=\"Left\" title=\"████\">\n                    {l}\n                  </Tab>\n                ) : null}\n                {rightSize ? (\n                  <Tab eventKey=\"Right\" title=\"████\">\n                    {r}\n                  </Tab>\n                ) : null}\n              </Tabs>\n            </Col>\n            <Col className=\"pageColumns\" sm={8}>\n              {m}\n            </Col>\n          </Row>\n        );\n      if (l)\n        return (\n          <Row>\n            {\" \"}\n            <Col className=\"pageColumns\" sm={4}>\n              {l}\n            </Col>\n            <Col className=\"pageColumns\" sm={8}>\n              {m}\n            </Col>\n          </Row>\n        );\n      if (r)\n        return (\n          <Row>\n            <Col className=\"pageColumns\" sm={8}>\n              {m}\n            </Col>\n            <Col className=\"pageColumns\" sm={4}>\n              {r}\n            </Col>\n          </Row>\n        );\n      return null;\n    };\n    if (columnType === \"single\")\n      return (\n        <Container fluid={true} className=\"pageColumns\">\n          {middleCol}\n        </Container>\n      );\n    return (\n      <Container fluid={true}>\n        <div className=\"d-block d-md-none\">\n          {/*## When the window is smaller, mobile for example ##*/}\n          <Tabs className=\"justify-content-center\" defaultActiveKey=\"Middle\">\n            {leftSize ? (\n              <Tab eventKey=\"Left\" title=\"████\">\n                {leftCol}\n              </Tab>\n            ) : null}\n            <Tab eventKey=\"Middle\" title=\"███████\">\n              {middleCol}\n            </Tab>\n            {rightSize ? (\n              <Tab eventKey=\"Right\" title=\"████\">\n                {rightCol}\n              </Tab>\n            ) : null}\n          </Tabs>\n        </div>\n        <div className=\"d-none d-md-block d-xl-none\">\n          {/*## When the window is medium-to-large, small windows ##*/}\n          {sidebarSwitch(leftCol, middleCol, rightCol)}\n        </div>\n        <div className=\"d-none d-xl-block\">\n          {/*## When the window is larger ##*/}\n          <Row>\n            <Col md={leftSize} className=\"pageColumns\">\n              {leftCol}\n            </Col>\n\n            <Col md={middleSize} className=\"pageColumns\">\n              {middleCol}\n            </Col>\n            <Col md={rightSize} className=\"pageColumns\">\n              {rightCol}\n            </Col>\n          </Row>\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default ColumnsRenderer;\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { Card } from \"react-bootstrap\";\nimport { complementColor } from \"./generalFunctions\";\nimport \"./woxLayout.css\";\n\nconst FooterRenderer = props => {\n  const style = { backgroundColor: complementColor(props.backgroundColor) };\n  return (\n    <Container fluid={true} className=\"pageFooter\">\n      <Card style={style}>\n        <Card.Body>\n          <h3>{props.footcontent}</h3>\n        </Card.Body>\n      </Card>\n    </Container>\n  );\n};\n\nexport default FooterRenderer;\n","import { getApiObject } from \"./generalFunctions\";\n\n// based on https://stackoverflow.com/a/2995536\nfunction changeFavicon(src) {\n  let docHead = document.head || document.getElementsByTagName(\"head\")[0];\n  var link = document.createElement(\"link\"),\n    oldLink = document.getElementById(\"dynamic-favicon\");\n  link.id = \"dynamic-favicon\";\n  link.rel = \"shortcut icon\";\n  link.href = src;\n  if (oldLink) {\n    docHead.removeChild(oldLink);\n  }\n  docHead.appendChild(link);\n}\n\nfunction setLayoutIcon(iconId) {\n  // icon ID is refering to a known image in the back-end:\n  const image = getApiObject(\"image\", iconId);\n  image.then(\n    res => {\n      if (res.id) changeFavicon(res.compressed_src);\n    },\n    err => {\n      console.log(err);\n    }\n  );\n}\n\nexport default setLayoutIcon;\n","import React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { pageParseProps, liveUpdate, layoutParseProps } from \"../defaults.json\";\nimport NavigationRenderer from \"./navigationRenderer\";\nimport ColumnsRenderer from \"./columnsRenderer\";\nimport FooterRenderer from \"./footerRenderer\";\nimport ErrorLog from \"./errorLog.jsx\";\nimport {\n  parseProps,\n  getApiObject,\n  requestUpdate,\n  stopRequestUpdate\n} from \"./generalFunctions\";\n\nimport \"./woxLayout.css\";\n\nimport setLayoutIcon from \"./editIcon\";\n\nconst noHomePage = {\n  statement: \"Could not find homepage, the server must be down\",\n  details: \"Please consider contacting the site admin to restart the server.\",\n  severity: 3\n};\n\nconst noFoundPage = id => ({\n  statement: \"Could not find page \" + id,\n  details: \"You will be automatically redirected to our homepage\",\n  severity: 3\n});\n\nconst noLayoutFound = id => ({\n  statement: \"Could not find layout \" + id,\n  details: \"Tried to fetch \" + id,\n  severity: 3\n});\n\nclass PageRenderer extends Component {\n  /*\n  The pages will be loaded in the following order:\n  - Page Layout will be fetched, this will describe general layout (columns, color, ...)\n  - Each column will fetch the components from top to bottom as they get loaded (improves performance)\n  - Each component will fetch its own data (pictures, text, ...) and this will be loaded\n  */\n\n  state = {\n    currentPage: false,\n    layout: false,\n    statement: \"loading ...\",\n    details: \"\",\n    severity: 0\n  };\n\n  parsePage = async page => {\n    const { layout } = page;\n    parseProps(page, pageParseProps);\n    document.title = page.title;\n\n    let fetchedLayout = await getApiObject(\"layout\", layout);\n\n    if (fetchedLayout && fetchedLayout.id) {\n      parseProps(fetchedLayout, layoutParseProps);\n      page.layout = fetchedLayout;\n      if (fetchedLayout.customIcon) setLayoutIcon(fetchedLayout.iconId);\n      this.setState({ currentPage: page, layout: fetchedLayout });\n    } else {\n      this.setState(noLayoutFound(layout));\n    }\n  };\n\n  startMainApp = async () => {\n    let currPage, pageId;\n    // check if user is on known page:\n    const currPath = new URL(document.URL).pathname;\n    // check if URL is known\n    currPage = await getApiObject(\"path\", currPath);\n\n    if (!currPage || !currPage.id) {\n      // if URL was invalid, maybe current URL refers to known page-id\n      pageId = currPath.split(\"/\").pop(); // returns \"c\" from \"foo.com/a/b/c\"\n      if (pageId) currPage = await getApiObject(\"page\", pageId);\n    }\n\n    if (!currPage || !currPage.id) {\n      if (currPath === \"/\") {\n        // No response from server\n        this.setState(noHomePage);\n        setTimeout(this.startMainApp, 3000);\n        return;\n      }\n      // User is on homepage but cant retrieve URL, try home page\n      this.setState(noFoundPage(pageId));\n      if (!currPage || !currPage.id)\n        setTimeout(() => {\n          window.location.href = new URL(document.URL).origin;\n        }, 3000);\n    }\n\n    if (currPage && currPage.id) {\n      this.parsePage(currPage);\n    }\n    return;\n  };\n\n  componentDidMount = async () => {\n    await this.startMainApp();\n    if (liveUpdate) requestUpdate(this, this.startMainApp);\n  };\n\n  componentWillUnmount() {\n    if (liveUpdate) stopRequestUpdate(this);\n  }\n\n  render() {\n    const { currentPage, layout } = this.state;\n    if (currentPage && layout) {\n      const { navbar, footer } = layout;\n      return (\n        <Container fluid={true} className=\"pageContainer\" style={layout}>\n          {navbar ? <NavigationRenderer {...layout} /> : null}\n          <ColumnsRenderer {...this.state} {...currentPage} />\n          {footer ? <FooterRenderer {...layout} /> : null}\n        </Container>\n      );\n    }\n    return <ErrorLog {...this.state} />;\n  }\n}\n\nexport default PageRenderer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// top-level bootstrap import\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"./App.css\";\n\n// base component which loads other components\nimport PageRenderer from \"./components/pageRenderer\";\n\nfunction App() {\n  return <PageRenderer />;\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}