#######################################
##########                   ##########
##########  DATABASE MODELS  ##########
##########                   ##########
#######################################


USER===
id : number
email : string
name : string
password : string
date : date
role : list of strings

PAGE===
id : number
title : string
author : user id
published : boolean
comps : list of component id's
date : date
url on website : eg.: "/contact"

PHOTO===
id : number
title : string
photoString : string (eindigen op .jpg of .npg of ...)
location : maps location
tags voor mensen : string(s)
comments : string
content : bytestring

LAYOUT===
id : number
columnType : string
backgroundType : string
backgroundColor : color
backgroundPicture : PHOTO.id
navbar : boolean
navcontent : string
footer : boolean
footcontent : string

COMPONENT===
id : number
author : USER.id
title : string
tags : list of string
type : string
content : string
pages : list of PAGE.id
data : date
pages : list of PAGE.id







#################################################
##########                             ##########
##########        OTHER WORRIES        ##########
##########    (regarding front-end)    ##########
##########                             ##########
#################################################


TYPES COMPONENT
*) carousel => met foto's uit de library (geupload door de admin, of met public rights)
*) ALGEMEEN COMPONENT [TITEL + TEKST + [LINK + KNOP] ]*
*) Foto folder (we zien nog wel hoe) met rights per folder/foto
*) Klikbare afbeeldingen
*) Tekst => met markdown parsen
*) container => eigenschap om andere components te ordenen

LEVELS COMPONENT:
TOP LEVEL: carousel, container, folder, algemeen
LOWER LEVEL: algemeen

FOR EVERY COMPONENT
content => altijd text met voorwaarden, gechecked door regex



APPARTE PAGINA:
Foto set (foto's, 1 locatie)